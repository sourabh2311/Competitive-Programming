\BOOKMARK [1][-]{section.1}{Maths}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Game Theory}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{What is a Combinatorial Game?}{subsection.1.1}% 3
\BOOKMARK [2][-]{subsection.1.2}{Mobius}{section.1}% 4
\BOOKMARK [2][-]{subsection.1.3}{Bell, Burnside, etc}{section.1}% 5
\BOOKMARK [3][-]{subsubsection.1.3.1}{Inclusion Exclusion Principle}{subsection.1.3}% 6
\BOOKMARK [2][-]{subsection.1.4}{Modulo}{section.1}% 7
\BOOKMARK [2][-]{subsection.1.5}{Prob and Comb}{section.1}% 8
\BOOKMARK [2][-]{subsection.1.6}{Placing Bishops on a Chessboard}{section.1}% 9
\BOOKMARK [3][-]{subsubsection.1.6.1}{Algorithm}{subsection.1.6}% 10
\BOOKMARK [3][-]{subsubsection.1.6.2}{Implementation}{subsection.1.6}% 11
\BOOKMARK [2][-]{subsection.1.7}{Euler's Totient Function}{section.1}% 12
\BOOKMARK [2][-]{subsection.1.8}{Catalan}{section.1}% 13
\BOOKMARK [2][-]{subsection.1.9}{Floyd Cycle Finding}{section.1}% 14
\BOOKMARK [2][-]{subsection.1.10}{Base Conversion}{section.1}% 15
\BOOKMARK [2][-]{subsection.1.11}{Extended Euclid}{section.1}% 16
\BOOKMARK [2][-]{subsection.1.12}{Linear Congruence Equation}{section.1}% 17
\BOOKMARK [3][-]{subsubsection.1.12.1}{Solution by finding the inverse element}{subsection.1.12}% 18
\BOOKMARK [3][-]{subsubsection.1.12.2}{Solution with the Advanced Euclidean Algorithm}{subsection.1.12}% 19
\BOOKMARK [2][-]{subsection.1.13}{Sieve}{section.1}% 20
\BOOKMARK [2][-]{subsection.1.14}{Matrix}{section.1}% 21
\BOOKMARK [2][-]{subsection.1.15}{Frac lib and Eqn solving}{section.1}% 22
\BOOKMARK [2][-]{subsection.1.16}{Balanced Ternary}{section.1}% 23
\BOOKMARK [2][-]{subsection.1.17}{15 Puzzle Game: Existence Of The Solution}{section.1}% 24
\BOOKMARK [3][-]{subsubsection.1.17.1}{Existence Of The Solution}{subsection.1.17}% 25
\BOOKMARK [2][-]{subsection.1.18}{Stern Broco Tree}{section.1}% 26
\BOOKMARK [2][-]{subsection.1.19}{Finding Power Of Factorial Divisor}{section.1}% 27
\BOOKMARK [3][-]{subsubsection.1.19.1}{Prime k}{subsection.1.19}% 28
\BOOKMARK [3][-]{subsubsection.1.19.2}{Composite k}{subsection.1.19}% 29
\BOOKMARK [2][-]{subsection.1.20}{GCD, LCM}{section.1}% 30
\BOOKMARK [2][-]{subsection.1.21}{Some properties of Fibonacci numbers}{section.1}% 31
\BOOKMARK [2][-]{subsection.1.22}{Wilson Theorem}{section.1}% 32
\BOOKMARK [2][-]{subsection.1.23}{Factorial modulo p in O\(p logn\)}{section.1}% 33
\BOOKMARK [3][-]{subsubsection.1.23.1}{Algorithm}{subsection.1.23}% 34
\BOOKMARK [3][-]{subsubsection.1.23.2}{Implementation}{subsection.1.23}% 35
\BOOKMARK [2][-]{subsection.1.24}{Modular Inverse}{section.1}% 36
\BOOKMARK [2][-]{subsection.1.25}{Gray Code}{section.1}% 37
\BOOKMARK [3][-]{subsubsection.1.25.1}{Finding Gray Code}{subsection.1.25}% 38
\BOOKMARK [3][-]{subsubsection.1.25.2}{Finding inverse gray code}{subsection.1.25}% 39
\BOOKMARK [2][-]{subsection.1.26}{Discrete Logarithm}{section.1}% 40
\BOOKMARK [3][-]{subsubsection.1.26.1}{Algorithm}{subsection.1.26}% 41
\BOOKMARK [3][-]{subsubsection.1.26.2}{Complexity}{subsection.1.26}% 42
\BOOKMARK [3][-]{subsubsection.1.26.3}{Implementation}{subsection.1.26}% 43
\BOOKMARK [3][-]{subsubsection.1.26.4}{Improved implementation}{subsection.1.26}% 44
\BOOKMARK [2][-]{subsection.1.27}{Chinese Remainder Theorem}{section.1}% 45
\BOOKMARK [2][-]{subsection.1.28}{Primitive Root}{section.1}% 46
\BOOKMARK [3][-]{subsubsection.1.28.1}{Definition}{subsection.1.28}% 47
\BOOKMARK [3][-]{subsubsection.1.28.2}{Existence}{subsection.1.28}% 48
\BOOKMARK [3][-]{subsubsection.1.28.3}{Relation with the Euler function}{subsection.1.28}% 49
\BOOKMARK [3][-]{subsubsection.1.28.4}{Algorithm for finding a primitive root}{subsection.1.28}% 50
\BOOKMARK [3][-]{subsubsection.1.28.5}{Implementation}{subsection.1.28}% 51
\BOOKMARK [2][-]{subsection.1.29}{Discrete Root}{section.1}% 52
\BOOKMARK [3][-]{subsubsection.1.29.1}{The algorithm}{subsection.1.29}% 53
\BOOKMARK [3][-]{subsubsection.1.29.2}{Implementation}{subsection.1.29}% 54
\BOOKMARK [2][-]{subsection.1.30}{Fermats last theorem}{section.1}% 55
\BOOKMARK [2][-]{subsection.1.31}{Josephus Problem}{section.1}% 56
\BOOKMARK [3][-]{subsubsection.1.31.1}{For k = 2}{subsection.1.31}% 57
\BOOKMARK [3][-]{subsubsection.1.31.2}{For general k 1}{subsection.1.31}% 58
\BOOKMARK [2][-]{subsection.1.32}{Root Solving}{section.1}% 59
\BOOKMARK [2][-]{subsection.1.33}{Integration}{section.1}% 60
\BOOKMARK [3][-]{subsubsection.1.33.1}{Simpson rule}{subsection.1.33}% 61
\BOOKMARK [2][-]{subsection.1.34}{Continued Fractions}{section.1}% 62
\BOOKMARK [2][-]{subsection.1.35}{Pells eqn}{section.1}% 63
\BOOKMARK [2][-]{subsection.1.36}{Side Notes}{section.1}% 64
\BOOKMARK [2][-]{subsection.1.37}{Important Problems}{section.1}% 65
\BOOKMARK [1][-]{section.2}{Graphs}{}% 66
\BOOKMARK [2][-]{subsection.2.1}{Basic}{section.2}% 67
\BOOKMARK [2][-]{subsection.2.2}{Articulation Points and Bridges \(undirected graph\)}{section.2}% 68
\BOOKMARK [2][-]{subsection.2.3}{Tree}{section.2}% 69
\BOOKMARK [3][-]{subsubsection.2.3.1}{LCA}{subsection.2.3}% 70
\BOOKMARK [3][-]{subsubsection.2.3.2}{Important Problems}{subsection.2.3}% 71
\BOOKMARK [3][-]{subsubsection.2.3.3}{MVC on Tree}{subsection.2.3}% 72
\BOOKMARK [3][-]{subsubsection.2.3.4}{MWIS on Tree}{subsection.2.3}% 73
\BOOKMARK [2][-]{subsection.2.4}{Terminology}{section.2}% 74
\BOOKMARK [2][-]{subsection.2.5}{Konigs Theorem}{section.2}% 75
\BOOKMARK [2][-]{subsection.2.6}{Bipartite Matching}{section.2}% 76
\BOOKMARK [3][-]{subsubsection.2.6.1}{Hopcroft Karp}{subsection.2.6}% 77
\BOOKMARK [3][-]{subsubsection.2.6.2}{Using max flow algo}{subsection.2.6}% 78
\BOOKMARK [2][-]{subsection.2.7}{Paths}{section.2}% 79
\BOOKMARK [3][-]{subsubsection.2.7.1}{No. of paths}{subsection.2.7}% 80
\BOOKMARK [2][-]{subsection.2.8}{SCC}{section.2}% 81
\BOOKMARK [3][-]{subsubsection.2.8.1}{Tarjan}{subsection.2.8}% 82
\BOOKMARK [3][-]{subsubsection.2.8.2}{Kosaraju}{subsection.2.8}% 83
\BOOKMARK [2][-]{subsection.2.9}{SAT}{section.2}% 84
\BOOKMARK [3][-]{subsubsection.2.9.1}{1 SAT}{subsection.2.9}% 85
\BOOKMARK [3][-]{subsubsection.2.9.2}{2 SAT}{subsection.2.9}% 86
\BOOKMARK [2][-]{subsection.2.10}{DAG}{section.2}% 87
\BOOKMARK [3][-]{subsubsection.2.10.1}{SSSP}{subsection.2.10}% 88
\BOOKMARK [3][-]{subsubsection.2.10.2}{SSLP}{subsection.2.10}% 89
\BOOKMARK [3][-]{subsubsection.2.10.3}{Counting Paths in DAG}{subsection.2.10}% 90
\BOOKMARK [3][-]{subsubsection.2.10.4}{Min Path cover on DAG}{subsection.2.10}% 91
\BOOKMARK [2][-]{subsection.2.11}{APSP Floyd Warshalls}{section.2}% 92
\BOOKMARK [2][-]{subsection.2.12}{MST \(Kruskal\)}{section.2}% 93
\BOOKMARK [2][-]{subsection.2.13}{SSSP}{section.2}% 94
\BOOKMARK [3][-]{subsubsection.2.13.1}{Dijkstra}{subsection.2.13}% 95
\BOOKMARK [3][-]{subsubsection.2.13.2}{Bellman ford}{subsection.2.13}% 96
\BOOKMARK [2][-]{subsection.2.14}{Max Flow}{section.2}% 97
\BOOKMARK [3][-]{subsubsection.2.14.1}{Edmond karps}{subsection.2.14}% 98
\BOOKMARK [2][-]{subsection.2.15}{Minimum Cost Flow}{section.2}% 99
\BOOKMARK [2][-]{subsection.2.16}{Kirchhoff's matrix tree theorem}{section.2}% 100
\BOOKMARK [2][-]{subsection.2.17}{Counting Labeled graphs}{section.2}% 101
\BOOKMARK [3][-]{subsubsection.2.17.1}{Labeled graphs}{subsection.2.17}% 102
\BOOKMARK [3][-]{subsubsection.2.17.2}{Connected labeled graphs}{subsection.2.17}% 103
\BOOKMARK [3][-]{subsubsection.2.17.3}{Labeled graphs with k connected components}{subsection.2.17}% 104
\BOOKMARK [2][-]{subsection.2.18}{Heavy Light Decomposition}{section.2}% 105
\BOOKMARK [2][-]{subsection.2.19}{More Problems}{section.2}% 106
\BOOKMARK [1][-]{section.3}{Some Basic}{}% 107
\BOOKMARK [2][-]{subsection.3.1}{Meet in the middle}{section.3}% 108
\BOOKMARK [2][-]{subsection.3.2}{To find subarray \(continguous\) with maximum average and of length k}{section.3}% 109
\BOOKMARK [2][-]{subsection.3.3}{To find subarray \(contiguous\) with maximum average and length more than k}{section.3}% 110
\BOOKMARK [2][-]{subsection.3.4}{Find subarray with given sum, elements are non negative}{section.3}% 111
\BOOKMARK [2][-]{subsection.3.5}{Largest subarray with gcd one}{section.3}% 112
\BOOKMARK [2][-]{subsection.3.6}{Smallest subarray with given gcd}{section.3}% 113
\BOOKMARK [2][-]{subsection.3.7}{LIS}{section.3}% 114
\BOOKMARK [2][-]{subsection.3.8}{LIS of consecutive integers}{section.3}% 115
\BOOKMARK [2][-]{subsection.3.9}{nth element}{section.3}% 116
\BOOKMARK [2][-]{subsection.3.10}{Optimal schedule of jobs given their deadlines and durations}{section.3}% 117
\BOOKMARK [2][-]{subsection.3.11}{Scheduling jobs on one machine}{section.3}% 118
\BOOKMARK [3][-]{subsubsection.3.11.1}{Linear penalty functions}{subsection.3.11}% 119
\BOOKMARK [3][-]{subsubsection.3.11.2}{Exponential penalty function}{subsection.3.11}% 120
\BOOKMARK [3][-]{subsubsection.3.11.3}{Identical monotone penalty function}{subsection.3.11}% 121
\BOOKMARK [3][-]{subsubsection.3.11.4}{Summary}{subsection.3.11}% 122
\BOOKMARK [2][-]{subsection.3.12}{Scheduling jobs on two machine}{section.3}% 123
\BOOKMARK [2][-]{subsection.3.13}{Ternary Search}{section.3}% 124
\BOOKMARK [2][-]{subsection.3.14}{Submask Enumeration}{section.3}% 125
\BOOKMARK [3][-]{subsubsection.3.14.1}{Iterating through all masks with their submasks. Complexity O\(3n\)}{subsection.3.14}% 126
\BOOKMARK [2][-]{subsection.3.15}{MOS Algorithm}{section.3}% 127
\BOOKMARK [2][-]{subsection.3.16}{MOS Algorithm with updates}{section.3}% 128
\BOOKMARK [2][-]{subsection.3.17}{Important Problems}{section.3}% 129
\BOOKMARK [1][-]{section.4}{Data Structures}{}% 130
\BOOKMARK [2][-]{subsection.4.1}{Segment Tree}{section.4}% 131
\BOOKMARK [1][-]{section.5}{DP}{}% 132
\BOOKMARK [2][-]{subsection.5.1}{Coin Change}{section.5}% 133
\BOOKMARK [2][-]{subsection.5.2}{0/1 Knapsack}{section.5}% 134
\BOOKMARK [2][-]{subsection.5.3}{Balanced Bracket Sequence}{section.5}% 135
\BOOKMARK [3][-]{subsubsection.5.3.1}{One type of bracket}{subsection.5.3}% 136
\BOOKMARK [3][-]{subsubsection.5.3.2}{MultiType}{subsection.5.3}% 137
\BOOKMARK [3][-]{subsubsection.5.3.3}{No. of balanced Sequences}{subsection.5.3}% 138
\BOOKMARK [3][-]{subsubsection.5.3.4}{Lexicographically next balanced sequence}{subsection.5.3}% 139
\BOOKMARK [3][-]{subsubsection.5.3.5}{Sequence Index}{subsection.5.3}% 140
\BOOKMARK [3][-]{subsubsection.5.3.6}{Finding the kth sequence}{subsection.5.3}% 141
\BOOKMARK [2][-]{subsection.5.4}{Important Problems}{section.5}% 142
\BOOKMARK [1][-]{section.6}{Strings}{}% 143
\BOOKMARK [2][-]{subsection.6.1}{Minimum Edit Distance}{section.6}% 144
\BOOKMARK [2][-]{subsection.6.2}{Length of longest Palindrome possible by removing 0 or more characters}{section.6}% 145
\BOOKMARK [2][-]{subsection.6.3}{Longest Common Subsequence}{section.6}% 146
\BOOKMARK [2][-]{subsection.6.4}{Prefix Function and KMP}{section.6}% 147
\BOOKMARK [3][-]{subsubsection.6.4.1}{Prefix Function}{subsection.6.4}% 148
\BOOKMARK [3][-]{subsubsection.6.4.2}{KMP}{subsection.6.4}% 149
\BOOKMARK [3][-]{subsubsection.6.4.3}{Counting number of occurrences of each prefix}{subsection.6.4}% 150
\BOOKMARK [2][-]{subsection.6.5}{Notes}{section.6}% 151
\BOOKMARK [2][-]{subsection.6.6}{SAM}{section.6}% 152
\BOOKMARK [2][-]{subsection.6.7}{Important Problems}{section.6}% 153
\BOOKMARK [1][-]{section.7}{Geometry}{}% 154
\BOOKMARK [2][-]{subsection.7.1}{Fast application of a set of geometric operations to a set of points}{section.7}% 155
\BOOKMARK [2][-]{subsection.7.2}{Klee's Algo}{section.7}% 156
\BOOKMARK [2][-]{subsection.7.3}{Closest Pair Problem}{section.7}% 157
\BOOKMARK [2][-]{subsection.7.4}{2D geo lib}{section.7}% 158
\BOOKMARK [2][-]{subsection.7.5}{3D geo lib}{section.7}% 159
