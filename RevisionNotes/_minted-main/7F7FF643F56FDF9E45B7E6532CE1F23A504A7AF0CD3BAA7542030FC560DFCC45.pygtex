\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{c+cpf}{\PYGZlt{}bits/stdc++.h\PYGZgt{}}

\PYG{k}{using} \PYG{k}{namespace} \PYG{n}{std}\PYG{p}{;}

\PYG{k}{typedef} \PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,} \PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{ii}\PYG{p}{;}
\PYG{k}{typedef} \PYG{k+kt}{long} \PYG{k+kt}{long} \PYG{k+kt}{int} \PYG{n}{ll}\PYG{p}{;}
\PYG{c+c1}{//Learning in depth about suffix automaton.}
\PYG{k}{struct} \PYG{n}{state} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{len}\PYG{p}{,} \PYG{n}{link}\PYG{p}{;}
    \PYG{n}{map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{char}\PYG{p}{,}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{next}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{cnt}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{firstpos}\PYG{p}{;}
    \PYG{k+kt}{bool} \PYG{n}{is\PYGZus{}clon}\PYG{p}{;}
    \PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{inv\PYGZus{}link}\PYG{p}{;}
\PYG{p}{\PYGZcb{};}
\PYG{k}{const} \PYG{k+kt}{int} \PYG{n}{MAXLEN} \PYG{o}{=} \PYG{l+m+mi}{250005}\PYG{p}{;}
\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{state}\PYG{o}{\PYGZgt{}} \PYG{n}{st}\PYG{p}{;}
\PYG{k+kt}{int} \PYG{n}{sz}\PYG{p}{,} \PYG{n}{last}\PYG{p}{;}
\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{o}{\PYGZgt{}} \PYG{n}{tcntdata}\PYG{p}{;}
\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{nsubs}\PYG{p}{,} \PYG{n}{d}\PYG{p}{,} \PYG{n}{lw}\PYG{p}{;}
\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{bool}\PYG{o}{\PYGZgt{}} \PYG{n}{isterminal}\PYG{p}{;}
\PYG{k+kt}{void} \PYG{n+nf}{sa\PYGZus{}init}\PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{size}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{nsubs}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
    \PYG{n}{isterminal}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{,} \PYG{n+nb}{false}\PYG{p}{);}
    \PYG{n}{tcntdata}\PYG{p}{.}\PYG{n}{clear}\PYG{p}{();}
    \PYG{n}{tcntdata}\PYG{p}{.}\PYG{n}{resize}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{);}
    \PYG{n}{lw}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
    \PYG{n}{d}\PYG{p}{.}\PYG{n}{assign}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
    \PYG{n}{st}\PYG{p}{.}\PYG{n}{clear}\PYG{p}{();}
    \PYG{n}{st}\PYG{p}{.}\PYG{n}{resize}\PYG{p}{(}\PYG{l+m+mi}{2} \PYG{o}{*} \PYG{n}{size}\PYG{p}{);}
    \PYG{n}{sz} \PYG{o}{=} \PYG{n}{last} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{len} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{cnt} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{firstpos} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{is\PYGZus{}clon} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
    \PYG{o}{++}\PYG{n}{sz}\PYG{p}{;}
    \PYG{n}{tcntdata}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{].}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{n+nf}{sa\PYGZus{}extend} \PYG{p}{(}\PYG{k+kt}{char} \PYG{n}{c}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{cur} \PYG{o}{=} \PYG{n}{sz}\PYG{o}{++}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{cnt} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{len} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{last}\PYG{p}{].}\PYG{n}{len} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{firstpos} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{len} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{is\PYGZus{}clon} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
    \PYG{n}{tcntdata}\PYG{p}{[}\PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{len}\PYG{p}{].}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{cur}\PYG{p}{);}
    \PYG{k+kt}{int} \PYG{n}{p}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{n}{p}\PYG{o}{=}\PYG{n}{last}\PYG{p}{;} \PYG{n}{p}\PYG{o}{!=\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{o}{!}\PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{next}\PYG{p}{.}\PYG{n}{count}\PYG{p}{(}\PYG{n}{c}\PYG{p}{);} \PYG{n}{p}\PYG{o}{=}\PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{link}\PYG{p}{)}
        \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{next}\PYG{p}{[}\PYG{n}{c}\PYG{p}{]} \PYG{o}{=} \PYG{n}{cur}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{p} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{c+c1}{// In case we came to the root, every non\PYGZhy{}empty suffix of string sc is accepted by state cur hence we can make link(cur) = t0 and finish our work on this step.}
        \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k}{else} \PYG{p}{\PYGZob{}}  \PYG{c+c1}{// Otherwise we found such state p, which already has transition by character c. It means that all suffixes of length ≤ len(p) + 1 are already accepted by some state in automaton hence we don’t need to add transitions to state cur anymore. But we also have to calculate suffix link for state cur.}
        \PYG{k+kt}{int} \PYG{n}{q} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{next}\PYG{p}{[}\PYG{n}{c}\PYG{p}{];}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{len} \PYG{o}{+} \PYG{l+m+mi}{1} \PYG{o}{==} \PYG{n}{st}\PYG{p}{[}\PYG{n}{q}\PYG{p}{].}\PYG{n}{len}\PYG{p}{)}  \PYG{c+c1}{// The largest string accepted by this state will be suffix of sc of length len(p) + 1. It is accepted by state q at the moment, in which there is transition by character c from state p. But state q can also accept strings of bigger length. So, if len(q) = len(p) + 1, then q is the suffix link we are looking for. We make link(cur) = q and finish algorithm.}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{n}{q}\PYG{p}{;}
        \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{k+kt}{int} \PYG{n}{clone} \PYG{o}{=} \PYG{n}{sz}\PYG{o}{++}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{len} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{len} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{next} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{q}\PYG{p}{].}\PYG{n}{next}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{q}\PYG{p}{].}\PYG{n}{link}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{cnt} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{firstpos} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{q}\PYG{p}{].}\PYG{n}{firstpos}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{is\PYGZus{}clon} \PYG{o}{=} \PYG{n+nb}{true}\PYG{p}{;}
            \PYG{n}{tcntdata}\PYG{p}{[}\PYG{n}{st}\PYG{p}{[}\PYG{n}{clone}\PYG{p}{].}\PYG{n}{len}\PYG{p}{].}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{clone}\PYG{p}{);}
            \PYG{k}{for} \PYG{p}{(;} \PYG{n}{p}\PYG{o}{!=\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{next}\PYG{p}{[}\PYG{n}{c}\PYG{p}{]}\PYG{o}{==}\PYG{n}{q}\PYG{p}{;} \PYG{n}{p}\PYG{o}{=}\PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{link}\PYG{p}{)}
                \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{next}\PYG{p}{[}\PYG{n}{c}\PYG{p}{]} \PYG{o}{=} \PYG{n}{clone}\PYG{p}{;}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{q}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{cur}\PYG{p}{].}\PYG{n}{link} \PYG{o}{=} \PYG{n}{clone}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{last} \PYG{o}{=} \PYG{n}{cur}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{// A state v will correspond to set of endpos equivalent strings, cnt[v] will give the number of occurences of such strings. And is equal to size of endpos of state v.}
\PYG{k+kt}{void} \PYG{n+nf}{processcnt}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{maxlen} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{last}\PYG{p}{].}\PYG{n}{len}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{n}{maxlen}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZgt{}=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{v} \PYG{p}{:} \PYG{n}{tcntdata}\PYG{p}{[}\PYG{n}{i}\PYG{p}{])} \PYG{p}{\PYGZob{}}
            \PYG{n}{st}\PYG{p}{[}\PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{link}\PYG{p}{].}\PYG{n}{cnt} \PYG{o}{+=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{cnt}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Clearly suffixes should be marked as terminal}
\PYG{k+kt}{void} \PYG{n+nf}{processterminal}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{n}{isterminal}\PYG{p}{[}\PYG{n}{last}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb}{true}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{p} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{last}\PYG{p}{].}\PYG{n}{link}\PYG{p}{;}
    \PYG{k}{while}\PYG{p}{(}\PYG{n}{p} \PYG{o}{!=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{isterminal}\PYG{p}{[}\PYG{n}{p}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb}{true}\PYG{p}{;}
        \PYG{n}{p} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{p}\PYG{p}{].}\PYG{n}{link}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Gives the number of substrings (not necessarily distinct). Clearly it should return n.(n+1)/2}
\PYG{k+kt}{int} \PYG{n+nf}{processnumsubs}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{at}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{return} \PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
    \PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{cnt}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{to} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{+=} \PYG{n}{processnumsubs}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{return} \PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{constructSA}\PYG{p}{(}\PYG{n}{string} \PYG{n}{ss}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{sa\PYGZus{}init}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{.}\PYG{n}{size}\PYG{p}{());}
    \PYG{k}{for}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{ss}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{sa\PYGZus{}extend}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]);}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{processterminal}\PYG{p}{();}
    \PYG{n}{processcnt}\PYG{p}{();}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{v} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;} \PYG{n}{v} \PYG{o}{\PYGZlt{}} \PYG{n}{sz}\PYG{p}{;} \PYG{o}{++}\PYG{n}{v}\PYG{p}{)}
        \PYG{n}{st}\PYG{p}{[}\PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{link}\PYG{p}{].}\PYG{n}{inv\PYGZus{}link}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{v}\PYG{p}{);}
    \PYG{n}{processnumsubs}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{// \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}After SA Construction}
\PYG{c+c1}{//}
\PYG{k+kt}{int} \PYG{n+nf}{getcorrstate}\PYG{p}{(}\PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{tosearch}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{tosearch}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{count} \PYG{p}{(}\PYG{n}{tosearch}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]))} \PYG{k}{return} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}
        \PYG{n}{at} \PYG{o}{=} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{[}\PYG{n}{tosearch}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]];}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{return} \PYG{n}{at}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{bool} \PYG{n+nf}{exist}\PYG{p}{(}\PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{tosearch}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{n}{getcorrstate} \PYG{p}{(}\PYG{n}{tosearch}\PYG{p}{);}
    \PYG{k}{return} \PYG{n}{at} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{?} \PYG{n+nb}{false} \PYG{o}{:} \PYG{n+nb}{true}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Returns number of different substrings = number of paths in DAG. And number of paths is clearly not a function of number of states in DAG.}
\PYG{c+c1}{// d[v] = 1 + summation (d[w])}
\PYG{c+c1}{// this same recurrence will give the size of subtree in case of a tree.}
\PYG{k+kt}{int} \PYG{n+nf}{numdiffsub}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{at}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{d}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{return} \PYG{n}{d}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
    \PYG{n}{d}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{to} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{d}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{+=} \PYG{n}{numdiffsub}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{return} \PYG{n}{d}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Returns total length of all distinct substrings = summation\PYGZus{}path (number of edges constituting that path) in DAG.}
\PYG{c+c1}{// ans[v] = summation (d[w] + ans[w]) basically, once we know ans[w], we know that we have number of paths starting from that node + ans[w] // as we know that in each of the contributing strings we should add 1 for this character transition as this character occurs in path for reaching this state. Plus 1 as to consider this character on its own.}
\PYG{k+kt}{int} \PYG{n+nf}{totlength}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{at}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{lw}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{return} \PYG{n}{lw}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
    \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{to} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{lw}\PYG{p}{[}\PYG{n}{at}\PYG{p}{]} \PYG{o}{+=} \PYG{n}{d}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{]} \PYG{o}{+} \PYG{n}{totlength}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{return} \PYG{n}{lw}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Find Lexicographically K\PYGZhy{}th Substring (here repeated substring is allowed):}
\PYG{k+kt}{void} \PYG{n+nf}{kthlexo}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{at}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{k}\PYG{p}{,} \PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{as}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{k} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{return}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{to} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{]} \PYG{o}{\PYGZgt{}=} \PYG{n}{k}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{as}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{first}\PYG{p}{);}
            \PYG{n}{kthlexo}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{,} \PYG{n}{k} \PYG{o}{\PYGZhy{}} \PYG{n}{st}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{].}\PYG{n}{cnt}\PYG{p}{,} \PYG{n}{as}\PYG{p}{);}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n}{k} \PYG{o}{\PYGZhy{}=} \PYG{n}{nsubs}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{];}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{// Repeated substring not allowed}
\PYG{k+kt}{void} \PYG{n+nf}{kthlexo2}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{at}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{k}\PYG{p}{,} \PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{as}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{k} \PYG{o}{\PYGZlt{}=} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{k}{return}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{to} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{d}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{]} \PYG{o}{\PYGZgt{}=} \PYG{n}{k}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{as}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{first}\PYG{p}{);}
            \PYG{n}{kthlexo2}\PYG{p}{(}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{,} \PYG{n}{k} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{as}\PYG{p}{);}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
            \PYG{n}{k} \PYG{o}{\PYGZhy{}=} \PYG{n}{d}\PYG{p}{[}\PYG{n}{to}\PYG{p}{.}\PYG{n}{second}\PYG{p}{];}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{c+c1}{// Returns true is the given string is the suffix of T}
\PYG{k+kt}{bool} \PYG{n+nf}{issuffix}\PYG{p}{(}\PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{tosearch}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{n}{getcorrstate} \PYG{p}{(}\PYG{n}{tosearch}\PYG{p}{);}
    \PYG{k}{return} \PYG{n}{isterminal}\PYG{p}{[}\PYG{n}{at}\PYG{p}{];}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Returns how many times P enters in T (occurences can overlap)}
\PYG{c+cm}{/* for each state v of the machine calculate a number \PYGZsq{}cnt[v]\PYGZsq{} which is equal to the}
\PYG{c+cm}{ * size of the set endpos(v). In fact, all the strings corresponding to the same state}
\PYG{c+cm}{ * enter the T same number of times which is equal to the number of positions in the set}
\PYG{c+cm}{ * endpos. */}
\PYG{k+kt}{int} \PYG{n+nf}{numoccur}\PYG{p}{(}\PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{tosearch}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{n}{getcorrstate} \PYG{p}{(}\PYG{n}{tosearch}\PYG{p}{);}
    \PYG{k}{return} \PYG{n}{at} \PYG{o}{==} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1} \PYG{o}{?} \PYG{l+m+mi}{0} \PYG{o}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{cnt}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Return position of the first occurrence of substring in T}
\PYG{k+kt}{int} \PYG{n+nf}{firstpos}\PYG{p}{(}\PYG{n}{string} \PYG{o}{\PYGZam{}}\PYG{n}{tosearch}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{n}{getcorrstate} \PYG{p}{(}\PYG{n}{tosearch}\PYG{p}{);}
    \PYG{k}{return} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{firstpos} \PYG{o}{\PYGZhy{}} \PYG{n}{tosearch}\PYG{p}{.}\PYG{n}{size}\PYG{p}{()} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Returns Positions of all occurrences of substring in T}
\PYG{k+kt}{void} \PYG{n+nf}{output\PYGZus{}all\PYGZus{}occurences} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{v}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{P\PYGZus{}length}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{is\PYGZus{}clon}\PYG{p}{)}
        \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{firstpos} \PYG{o}{\PYGZhy{}} \PYG{n}{P\PYGZus{}length} \PYG{o}{+} \PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{size\PYGZus{}t} \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i}\PYG{o}{\PYGZlt{}}\PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{inv\PYGZus{}link}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();} \PYG{o}{++}\PYG{n}{i}\PYG{p}{)}
        \PYG{n}{output\PYGZus{}all\PYGZus{}occurences}\PYG{p}{(}\PYG{n}{st}\PYG{p}{[}\PYG{n}{v}\PYG{p}{].}\PYG{n}{inv\PYGZus{}link}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],} \PYG{n}{P\PYGZus{}length}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{smallestcyclicshift}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{n}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{at} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{string} \PYG{n}{anss}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{length} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k}{while}\PYG{p}{(}\PYG{n}{length} \PYG{o}{!=} \PYG{n}{n}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{for} \PYG{p}{(}\PYG{k}{auto} \PYG{n+nl}{it} \PYG{p}{:} \PYG{n}{st}\PYG{p}{[}\PYG{n}{at}\PYG{p}{].}\PYG{n}{next}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{anss}\PYG{p}{.}\PYG{n}{push\PYGZus{}back}\PYG{p}{(}\PYG{n}{it}\PYG{p}{.}\PYG{n}{first}\PYG{p}{);}
            \PYG{n}{at} \PYG{o}{=} \PYG{n}{it}\PYG{p}{.}\PYG{n}{second}\PYG{p}{;}
            \PYG{n}{length}\PYG{o}{++}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{anss} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{c+c1}{// cout \PYGZlt{}\PYGZlt{} st[at].firstpos \PYGZhy{} n + 1 \PYGZlt{}\PYGZlt{} \PYGZdq{}\PYGZbs{}n\PYGZdq{}; may give the index for that shift.}
\PYG{p}{\PYGZcb{}}


\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{()} \PYG{p}{\PYGZob{}}
    \PYG{n}{string} \PYG{n}{s}\PYG{p}{;}
    \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{s}\PYG{p}{;}
    \PYG{n}{constructSA}\PYG{p}{(}\PYG{n}{s}\PYG{p}{);}
    \PYG{k+kt}{int} \PYG{n}{choice}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Choose your option:}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{1: Substring exist in T or not}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{2: Number of different substring of T}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}3: To find total length of distinct substrings}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}4: To check whether the given string is suffix or not}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}5(5.1): To print the K\PYGZhy{}th lexicographic substring (Repeated substrings allowed)}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}6: To see how many times, given string occurs in T}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}7: To find the position of the first occurrence of substring in T}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}8: To find position of all the occurences of substring in T}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}9(5.2): To print the K\PYGZhy{}th lexicographic substring (Repeated substrings not allowed)}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}10: To find the smallest cyclic shift}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}

    \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}15: to exit}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{choice}\PYG{p}{;}
    \PYG{k}{if}\PYG{p}{(}\PYG{n}{choice} \PYG{o}{==} \PYG{l+m+mi}{15}\PYG{p}{)} \PYG{k}{break}\PYG{p}{;}
    \PYG{n}{string} \PYG{n}{ss}\PYG{p}{,} \PYG{n}{ns}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{k}\PYG{p}{,} \PYG{n}{v}\PYG{p}{;}
    \PYG{k}{switch}\PYG{p}{(}\PYG{n}{choice}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{case} \PYG{l+m+mi}{1}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter your string}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{exist}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{))} \PYG{p}{\PYGZob{}}
                \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}yes it exist}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}no it does not exist}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
            \PYG{c+c1}{//cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Enter new to string to search for\PYGZbs{}n\PYGZdq{};}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{2}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{numdiffsub}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{3}\PYG{o}{:}
            \PYG{n}{numdiffsub}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{totlength}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{4}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter the string}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{issuffix}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{))} \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}yes}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{else} \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}no}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{5}\PYG{o}{:}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{k}\PYG{p}{;}
            \PYG{n}{ss}\PYG{p}{.}\PYG{n}{clear}\PYG{p}{();}
            \PYG{n}{kthlexo}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{k}\PYG{p}{,} \PYG{n}{ss}\PYG{p}{);}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())} \PYG{p}{\PYGZob{}}
                \PYG{n}{ss} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}No such line.\PYGZdq{}}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{ss} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{6}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter string}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{numoccur}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{7}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter string}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{firstpos}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{)} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{8}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter string}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{c+cm}{/*for(v = 0; v \PYGZlt{} s.size(); v++) \PYGZob{}}
\PYG{c+cm}{                cout \PYGZlt{}\PYGZlt{} setw(2) \PYGZlt{}\PYGZlt{} v;}
\PYG{c+cm}{            \PYGZcb{}}
\PYG{c+cm}{            cout \PYGZlt{}\PYGZlt{} \PYGZdq{}\PYGZbs{}n\PYGZdq{};}
\PYG{c+cm}{            for(v = 0; v \PYGZlt{} s.size(); v++) \PYGZob{}}
\PYG{c+cm}{                cout \PYGZlt{}\PYGZlt{} setw(2) \PYGZlt{}\PYGZlt{} s[v];}
\PYG{c+cm}{            \PYGZcb{}}
\PYG{c+cm}{            cout \PYGZlt{}\PYGZlt{} \PYGZdq{}\PYGZbs{}n\PYGZdq{};*/}
            \PYG{n}{v} \PYG{o}{=} \PYG{n}{getcorrstate}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{);}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{v} \PYG{o}{!=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{output\PYGZus{}all\PYGZus{}occurences}\PYG{p}{(}\PYG{n}{v}\PYG{p}{,} \PYG{n}{ss}\PYG{p}{.}\PYG{n}{size}\PYG{p}{());}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{9}\PYG{o}{:}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{k}\PYG{p}{;}
            \PYG{n}{numdiffsub}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{);}
            \PYG{n}{kthlexo2}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n}{k}\PYG{p}{,} \PYG{n}{ss}\PYG{p}{);}
            \PYG{k}{if}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())} \PYG{p}{\PYGZob{}}
                \PYG{n}{ss} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}No such line.\PYGZdq{}}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{ss} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{k}{case} \PYG{l+m+mi}{10}\PYG{o}{:}
            \PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}Enter S}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
            \PYG{n}{cin} \PYG{o}{\PYGZgt{}\PYGZgt{}} \PYG{n}{ss}\PYG{p}{;}
            \PYG{n}{s} \PYG{o}{=} \PYG{n}{ss} \PYG{o}{+} \PYG{n}{ss}\PYG{p}{;}
            \PYG{n}{constructSA}\PYG{p}{(}\PYG{n}{s}\PYG{p}{);}
            \PYG{n}{smallestcyclicshift}\PYG{p}{(}\PYG{n}{ss}\PYG{p}{.}\PYG{n}{size} \PYG{p}{());}
            \PYG{k}{break}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
